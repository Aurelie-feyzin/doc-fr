<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c0b61c45a5dabe46865510311e57b77ea3dddb7 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="gearmanclient.addtasklow" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanClient::addTaskLow</refname>
  <refpurpose>Ajoute une tâche de faible priorité à effectuer en parallèle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="GearmanClient">
   <modifier>public</modifier> <type class="union"><type>GearmanTask</type><type>false</type></type><methodname>GearmanClient::addTaskLow</methodname>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>int</type><type>float</type></type><parameter>workload</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>unique_key</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ajoute une tâche de faible priorité à effectuer en parallèle d'autres tâches.
   Appelez cette méthode pour que toutes les tâches soient menées de front, puis appelez
   <methodname>GearmanClient::runTasks</methodname> pour faire le travail. Les tâches avec une faible priorité
   seront sélectionnée dans la queue après celle de priorité plus forte.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.functionname;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>workload</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.workload;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.context;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>unique_key</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.unique;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un objet <classname>GearmanTask</classname> ou &false; si la tâche ne peut pas être ajoutée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Une tâche de faible priorité en même temps que deux tâches normales</title>
    <para>
  Une tâche de faible priorité est ajoutée en plus de deux autres tâches. Un seul agent
  est disponible, de telle façon que les tâches s'exécutent une à une, avec celle de faible priorité
  en dernier.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

# crée le client Gearman
$gmc= new GearmanClient();

# ajoute le serveur par défaut
$gmc->addServer();

# fixe le retour quand la tâche est complétée
$gmc->setCompleteCallback("inverse_complete");

# ajoute des tâches, l'une ayant une faible priorité
$task= $gmc->addTask("inverse", "Bonjour le monde!", null, "1");
$task= $gmc->addTaskLow("inverse", "!ednom el ruojnoB", null, "2");
$task= $gmc->addTask("inverse", "Bonjour le monde!", null, "3");

if (! $gmc->runTasks())
{
    echo "ERROR " . $gmc->error() . "\n";
    exit;
}
echo "Fait\n";

function inverse_complete($task)
{
    echo "Complétée : " . $task->unique() . ", " . $task->data() . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Complétée : 3, !ednom el ruojnoB
Complétée : 1, !ednom el ruojnoB
Complétée : 2, Bonjour le monde!
Fait
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::addTask</methodname></member>
    <member><methodname>GearmanClient::addTaskHigh</methodname></member>
    <member><methodname>GearmanClient::addTaskBackground</methodname></member>
    <member><methodname>GearmanClient::addTaskHighBackground</methodname></member>
    <member><methodname>GearmanClient::addTaskLowBackground</methodname></member>
    <member><methodname>GearmanClient::runTasks</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
